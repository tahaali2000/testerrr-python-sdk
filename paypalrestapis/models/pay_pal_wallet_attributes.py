# -*- coding: utf-8 -*-

"""
paypalrestapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from paypalrestapis.api_helper import APIHelper
from paypalrestapis.models.pay_pal_wallet_customer_request import PayPalWalletCustomerRequest
from paypalrestapis.models.pay_pal_wallet_vault_instruction import PayPalWalletVaultInstruction


class PayPalWalletAttributes(object):

    """Implementation of the 'PayPal Wallet Attributes' model.

    Additional attributes associated with the use of this PayPal Wallet.

    Attributes:
        customer (PayPalWalletCustomerRequest): The model property of type
            PayPalWalletCustomerRequest.
        vault (PayPalWalletVaultInstruction): The model property of type
            PayPalWalletVaultInstruction.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "customer": 'customer',
        "vault": 'vault'
    }

    _optionals = [
        'customer',
        'vault',
    ]

    def __init__(self,
                 customer=APIHelper.SKIP,
                 vault=APIHelper.SKIP):
        """Constructor for the PayPalWalletAttributes class"""

        # Initialize members of the class
        if customer is not APIHelper.SKIP:
            self.customer = customer 
        if vault is not APIHelper.SKIP:
            self.vault = vault 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        customer = PayPalWalletCustomerRequest.from_dictionary(dictionary.get('customer')) if 'customer' in dictionary.keys() else APIHelper.SKIP
        vault = PayPalWalletVaultInstruction.from_dictionary(dictionary.get('vault')) if 'vault' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(customer,
                   vault)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'customer={(self.customer if hasattr(self, "customer") else None)!r}, '
                f'vault={(self.vault if hasattr(self, "vault") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'customer={(self.customer if hasattr(self, "customer") else None)!s}, '
                f'vault={(self.vault if hasattr(self, "vault") else None)!s})')
